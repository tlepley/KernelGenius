/*
  This file is part of KernelGenius.

  Copyright (C) 2013 STMicroelectronics

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 3 of the License, or (at your option) any later version.
 
  This program is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Lesser General Public License for more details.
 
  You should have received a copy of the GNU Lesser General Public
  License along with this program; if not, write to the Free
  Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  Boston, MA 02110-1301 USA.
*/

#ifndef BORDER
#define BORDER zero
#endif
 
kernel Sobel3x3(int width=[1:1920], int height=[1:1080],
			float in[height][width]) {
   	
	Convolution<float> gx(in) {
		.border = BORDER;
		.coefficients= (float[-1:1][-1:1]) { {-1., 0., 1.},
					   	     {-2., 0., 2.},
						     {-1., 0., 1.} };
	};

	Convolution<float> gy(in) {
		.border = BORDER;
		.coefficients= (float[-1:1][-1:1]) { {-1., -2., -1.},
						     { 0.,  0.,  0.},
						     { 1.,  2. , 1.} } ;
	};

	EuclideanNorm<float> merge(gx , gy);
	
	return merge;
}
