#ifndef  COEF_FILE
# define COEF_FILE "coefficientsMulDiv.h"
#endif
#include COEF_FILE

#ifndef BORDER
# define BORDER undef
#endif

${
  constant float filterPattern[(DIM1_MAX)-(DIM1_MIN)+1][(DIM0_MAX)-(DIM0_MIN)+1] = { COEFS };
}$


kernel ConvolutionNxM(int width=[1:1920], int height=[1:1080],
		      float in[height][width]) {
   	  	
  Filter<float> conv(in) {
    .border = BORDER;
    .function= ${
      @conv[0][0]=filterPattern[0][0]*$in[-1][-1]+filterPattern[0][1]*$in[-1][0]+filterPattern[0][2]*$in[-1][1]+filterPattern[0][3]*$in[-1][2]+filterPattern[0][4]*$in[-1][3]+
                  filterPattern[1][0]*$in[0][-1] +filterPattern[1][1]*$in[0][0] +filterPattern[1][2]*$in[0][1] +filterPattern[1][3]*$in[0][2] +filterPattern[1][4]*$in[0][3] +
                  filterPattern[2][0]*$in[1][-1] +filterPattern[2][1]*$in[1][0] +filterPattern[2][2]*$in[1][1] +filterPattern[2][3]*$in[1][2] +filterPattern[2][4]*$in[1][3] + 
                  filterPattern[3][0]*$in[2][-1] +filterPattern[3][1]*$in[2][0] +filterPattern[3][2]*$in[2][1] +filterPattern[3][3]*$in[2][2] +filterPattern[3][4]*$in[2][3] +
                  filterPattern[4][0]*$in[3][-1] +filterPattern[4][1]*$in[3][0] +filterPattern[4][2]*$in[3][1] +filterPattern[4][3]*$in[3][2] +filterPattern[4][4]*$in[3][3]; 
    }$;
  };
  
  return conv;
}

